% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class_TreeStructureInR6.R
\name{ListTreeNode}
\alias{ListTreeNode}
\title{The Tree Node implementation.}
\description{
\code{ListTreeNode} is an top level/ most generic node structure.
}
\details{
Construct the List Tree Node, we not use the Ring Tree Node as suggested by the Joseph Felsenstein in the \if{html}{\out{<Phylogenetics>}} book
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{an static id, used to construct the CGBID: see https://doi.org/10.1093/bib/bbab583}

\item{\code{branchLength}}{the branch length of the node}

\item{\code{label}}{usually for the leaf, a.k.a the leaf name}

\item{\code{members}}{the number of leaves that are descendants of the current node}

\item{\code{children}}{the children list
Construct function}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ListTreeNode-new}{\code{ListTreeNode$new()}}
\item \href{#method-ListTreeNode-addChild}{\code{ListTreeNode$addChild()}}
\item \href{#method-ListTreeNode-isLeaf}{\code{ListTreeNode$isLeaf()}}
\item \href{#method-ListTreeNode-print}{\code{ListTreeNode$print()}}
\item \href{#method-ListTreeNode-getIDName}{\code{ListTreeNode$getIDName()}}
\item \href{#method-ListTreeNode-clone}{\code{ListTreeNode$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListTreeNode-new"></a>}}
\if{latex}{\out{\hypertarget{method-ListTreeNode-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListTreeNode$new(id = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the numeric id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{ListTreeNode} object.
add a Child for the node
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListTreeNode-addChild"></a>}}
\if{latex}{\out{\hypertarget{method-ListTreeNode-addChild}{}}}
\subsection{Method \code{addChild()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListTreeNode$addChild(child)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{child}}{the child node
Return whether this a leaf}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListTreeNode-isLeaf"></a>}}
\if{latex}{\out{\hypertarget{method-ListTreeNode-isLeaf}{}}}
\subsection{Method \code{isLeaf()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListTreeNode$isLeaf()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
T for leaf, F for internal node
Print the node information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListTreeNode-print"></a>}}
\if{latex}{\out{\hypertarget{method-ListTreeNode-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListTreeNode$print()}\if{html}{\out{</div>}}
}

\subsection{Details}{
See the information of the node

get the CGB ID that can uniquely represent the node.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListTreeNode-getIDName"></a>}}
\if{latex}{\out{\hypertarget{method-ListTreeNode-getIDName}{}}}
\subsection{Method \code{getIDName()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListTreeNode$getIDName()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the ID name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListTreeNode-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ListTreeNode-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListTreeNode$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
