% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Class_Geometric.R
\name{polar2cartesianCoor}
\alias{polar2cartesianCoor}
\title{Polar coordinates to Cartesian coordinates.}
\usage{
polar2cartesianCoor(radius, angle, xCenter = 0.5, yCenter = 0.5)
}
\arguments{
\item{radius:}{the circular radius}

\item{angle:}{unit is in degrees, NOT radian.}

\item{xCenter:}{the xCenter coordinate point}

\item{yCenter:}{the yCenter coordinate point}
}
\value{
the 2 x n matrix list, first row is the sin related values, second row is cos related values.
}
\description{
The function supports the vectorised invoke usage.

The implementation employs the euler's formula to accelerate the computation.

NOTE the radius and location (xCenter, yCenter) should be the same unit with values(NOT unit object instances).
\itemize{
\item For example, you can input the inch unit values, not the inch object.
}
}
\details{
For the perspective of the generate mechanism, this function is same as \code{\link[=produce_model_coordinate_points]{produce_model_coordinate_points()}}.
While the purpose is different, the latter is for the affine transformation.
\itemize{
\item User can implement the same purpose for these two functions.
}
}
\examples{
polar2cartesianCoor(1,5)
polar2cartesianCoor(radius = 1, angle = 5)

# Vectorised usage example:
a <- polar2cartesianCoor(radius = 2, angle = 0:360,xCenter = 2,yCenter = 2)
grid.newpage()
grid.lines(x = a[1,], y = a[2,], default.units = 'in')
}
\seealso{
\code{\link[=produce_model_coordinate_points]{produce_model_coordinate_points()}}
}
